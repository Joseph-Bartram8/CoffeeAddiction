/* tslint:disable */
/* eslint-disable */
/**
 * Coffee Addiction API
 * Coffee Addiction API swagger documentation
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface LoginPost200Response
 */
export interface LoginPost200Response {
    /**
     * Unique identifier for the user
     * @type {number}
     * @memberof LoginPost200Response
     */
    userId?: number;
    /**
     * Username of the user
     * @type {string}
     * @memberof LoginPost200Response
     */
    username?: string;
    /**
     * JWT token of user
     * @type {string}
     * @memberof LoginPost200Response
     */
    jwt?: string;
    /**
     * Number of login attempts for the user
     * @type {number}
     * @memberof LoginPost200Response
     */
    loginAttempts?: number;
    /**
     * First name of the user
     * @type {string}
     * @memberof LoginPost200Response
     */
    firstName?: string;
    /**
     * Last name of the user
     * @type {string}
     * @memberof LoginPost200Response
     */
    lastName?: string;
    /**
     * Date and time when the user was created
     * @type {Date}
     * @memberof LoginPost200Response
     */
    createdAt?: Date;
}

/**
 * Check if a given object implements the LoginPost200Response interface.
 */
export function instanceOfLoginPost200Response(value: object): value is LoginPost200Response {
    return true;
}

export function LoginPost200ResponseFromJSON(json: any): LoginPost200Response {
    return LoginPost200ResponseFromJSONTyped(json, false);
}

export function LoginPost200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): LoginPost200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'userId': json['userId'] == null ? undefined : json['userId'],
        'username': json['username'] == null ? undefined : json['username'],
        'jwt': json['jwt'] == null ? undefined : json['jwt'],
        'loginAttempts': json['loginAttempts'] == null ? undefined : json['loginAttempts'],
        'firstName': json['firstName'] == null ? undefined : json['firstName'],
        'lastName': json['lastName'] == null ? undefined : json['lastName'],
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
    };
}

export function LoginPost200ResponseToJSON(json: any): LoginPost200Response {
    return LoginPost200ResponseToJSONTyped(json, false);
}

export function LoginPost200ResponseToJSONTyped(value?: LoginPost200Response | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'userId': value['userId'],
        'username': value['username'],
        'jwt': value['jwt'],
        'loginAttempts': value['loginAttempts'],
        'firstName': value['firstName'],
        'lastName': value['lastName'],
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
    };
}

