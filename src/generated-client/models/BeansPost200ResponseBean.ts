/* tslint:disable */
/* eslint-disable */
/**
 * Coffee Addiction API
 * Coffee Addiction API swagger documentation
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface BeansPost200ResponseBean
 */
export interface BeansPost200ResponseBean {
    /**
     * Unique identifier for the coffee bean
     * @type {number}
     * @memberof BeansPost200ResponseBean
     */
    beanId?: number;
    /**
     * Name of the coffee bean
     * @type {string}
     * @memberof BeansPost200ResponseBean
     */
    name?: string;
    /**
     * Country or region of origin
     * @type {string}
     * @memberof BeansPost200ResponseBean
     */
    origin?: string;
    /**
     * Level of roast (e.g., light, medium, dark)
     * @type {string}
     * @memberof BeansPost200ResponseBean
     */
    roastLevel?: string;
    /**
     * Price per kilogram of coffee beans
     * @type {number}
     * @memberof BeansPost200ResponseBean
     */
    pricePerKg?: number;
    /**
     * URL
     * @type {string}
     * @memberof BeansPost200ResponseBean
     */
    imageUrl?: string;
    /**
     * Available quantity in stock
     * @type {number}
     * @memberof BeansPost200ResponseBean
     */
    stockQuantity?: number;
    /**
     * Detailed description of the coffee bean
     * @type {string}
     * @memberof BeansPost200ResponseBean
     */
    description?: string;
}

/**
 * Check if a given object implements the BeansPost200ResponseBean interface.
 */
export function instanceOfBeansPost200ResponseBean(value: object): value is BeansPost200ResponseBean {
    return true;
}

export function BeansPost200ResponseBeanFromJSON(json: any): BeansPost200ResponseBean {
    return BeansPost200ResponseBeanFromJSONTyped(json, false);
}

export function BeansPost200ResponseBeanFromJSONTyped(json: any, ignoreDiscriminator: boolean): BeansPost200ResponseBean {
    if (json == null) {
        return json;
    }
    return {
        
        'beanId': json['bean_id'] == null ? undefined : json['bean_id'],
        'name': json['name'] == null ? undefined : json['name'],
        'origin': json['origin'] == null ? undefined : json['origin'],
        'roastLevel': json['roastLevel'] == null ? undefined : json['roastLevel'],
        'pricePerKg': json['pricePerKg'] == null ? undefined : json['pricePerKg'],
        'imageUrl': json['imageUrl'] == null ? undefined : json['imageUrl'],
        'stockQuantity': json['stockQuantity'] == null ? undefined : json['stockQuantity'],
        'description': json['description'] == null ? undefined : json['description'],
    };
}

export function BeansPost200ResponseBeanToJSON(json: any): BeansPost200ResponseBean {
    return BeansPost200ResponseBeanToJSONTyped(json, false);
}

export function BeansPost200ResponseBeanToJSONTyped(value?: BeansPost200ResponseBean | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'bean_id': value['beanId'],
        'name': value['name'],
        'origin': value['origin'],
        'roastLevel': value['roastLevel'],
        'pricePerKg': value['pricePerKg'],
        'imageUrl': value['imageUrl'],
        'stockQuantity': value['stockQuantity'],
        'description': value['description'],
    };
}

